local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local whitelist = {
    ["SadNii4"] = true,
    ["82iwkwjw3"] = true,
    ["EternaIKing_ofc"] = true,
    ["EternalQueen_ofc"] = true,
    ["OfEternal_king"] = true,
    ["OfEternal_queen"] = true,
    ["PROPLAYER292827"] = true,
    ["ilvieharbor73"] = true,
    ["TOQUIO_94"] = true,
    ["TOQUIO_944"] = true,
    ["ARMY_S0LDIER8"] = true,
    ["dorrido13"] = true,
    ["PEBUGADOTUTORIAL"] = true,
    ["TheLittle8Prince"] = true,
    ["Italo444hzx"] = true,
    ["NOOB_SEUPESADELO"] = true,
    ["Voa_Passarinho8"] = true,
    ["SadNii0"] = true,
    ["NeezXIX"] = true,
    ["Nicke_Nii"] = true,
    ["KillMachineFatality"] = true,
    ["Kansas_Girl8"] = true,
    ["Maveick01"] = true,
    ["XXDuquesa_julianaXX"] = true,
    ["User25"] = true,
    ["User26"] = true,
    ["User27"] = true,
    ["User28"] = true,
    ["User29"] = true,
    ["User30"] = true,
    ["User31"] = true,
    ["User32"] = true,
    ["User33"] = true,
    ["User34"] = true,
    ["User35"] = true,
    ["User36"] = true,
    ["User37"] = true,
    ["User38"] = true,
    ["User39"] = true
}

if not whitelist[LocalPlayer.Name] then
    LocalPlayer:Kick("Voce nao esta na whitelist para usar este script.")
    return
end

print("Usuario autorizado:", LocalPlayer.Name)

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/MlFrvWM/BBLT81/main/BL81827TC", true))()

local window = library:AddWindow("Sad v1.0.0 | Farming", {
    main_color = Color3.fromRGB(20, 82, 24),
    min_size = Vector2.new(625, 500),
    can_resize = false,
})

local tabFarming = window:AddTab("Farming")

tabFarming:AddLabel("Fast Farming").TextSize = 25

local player = game.Players.LocalPlayer
local muscleEvent = player:WaitForChild("muscleEvent")
local runFastRep = false
local repsPerTick = 1

local function getPing()
    local stats = game:GetService("Stats")
    local pingStat = stats:FindFirstChild("PerformanceStats") and stats.PerformanceStats:FindFirstChild("Ping")
    return pingStat and pingStat:GetValue() or 0
end

tabFarming:AddTextBox("Rep Speed", function(value)
    local num = tonumber(value)
    if num and num > 0 then
        repsPerTick = math.floor(num)
    end
end, {
    placeholder = "1",
})

local function fastRepLoop()
    while runFastRep do
        local startTime = tick()
        while tick() - startTime < 0.75 and runFastRep do
            for i = 1, repsPerTick do
                muscleEvent:FireServer("rep")
            end
            task.wait(0.02)
        end

        while runFastRep and getPing() >= 100 do
            task.wait(1)
        end
    end
end

tabFarming:AddSwitch("Fast Rep", function(state)
    runFastRep = state
    if runFastRep then
        task.spawn(fastRepLoop)
    else
        print("")
    end
end)

tabFarming:AddSwitch("Hide Pop Ups", function(bool)
    local rSto = game:GetService("ReplicatedStorage")
    for _, obj in pairs(rSto:GetChildren()) do
        if obj.Name:match("Frame$") then
            obj.Visible = not bool
        end
    end
end)

local VIM = game:GetService("VirtualInputManager")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function pressE()
    VIM:SendKeyEvent(true, "E", false, game)
    task.wait(0.1)
    VIM:SendKeyEvent(false, "E", false, game)
end

local function autoLift()
    while getgenv().working do
        LocalPlayer.muscleEvent:FireServer("rep")
        task.wait()
    end
end

local function teleportAndStart(position)
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = position
        task.wait(0.1)
        pressE()
        getgenv().working = true
        task.spawn(autoLift)
    end
end

tabFarming:AddSwitch("Auto Jungle", function()
    getgenv().working = false
    teleportAndStart(CFrame.new(-8352, 34, 2878))
end)

local autoEatEnabled = false

local function eatProteinEgg()
    local player = game.Players.LocalPlayer
    local backpack = player:WaitForChild("Backpack")
    local character = player.Character or player.CharacterAdded:Wait()

    local egg = backpack:FindFirstChild("Protein Egg")
    if egg then
        egg.Parent = character
        task.wait(0.1)
        egg:Activate()
    end
end

task.spawn(function()
    while true do
        if autoEatEnabled then
            eatProteinEgg()
            task.wait(1800)
        else
            task.wait(1)
        end
    end
end)

tabFarming:AddSwitch("Auto Egg", function(state)
    autoEatEnabled = state
end)

tabFarming:AddButton("Anti Lag", function()
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local lighting = game:GetService("Lighting")

    for _, gui in pairs(playerGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            gui:Destroy()
        end
    end

    local function darkenSky()
        for _, v in pairs(lighting:GetChildren()) do
            if v:IsA("Sky") then
                v:Destroy()
            end
        end

        local darkSky = Instance.new("Sky")
        darkSky.Name = "DarkSky"
        darkSky.SkyboxBk = "rbxassetid://0"
        darkSky.SkyboxDn = "rbxassetid://0"
        darkSky.SkyboxFt = "rbxassetid://0"
        darkSky.SkyboxLf = "rbxassetid://0"
        darkSky.SkyboxRt = "rbxassetid://0"
        darkSky.SkyboxUp = "rbxassetid://0"
        darkSky.Parent = lighting

        lighting.Brightness = 0
        lighting.ClockTime = 0
        lighting.TimeOfDay = "00:00:00"
        lighting.OutdoorAmbient = Color3.new(0, 0, 0)
        lighting.Ambient = Color3.new(0, 0, 0)
        lighting.FogColor = Color3.new(0, 0, 0)
        lighting.FogEnd = 100

        task.spawn(function()
            while true do
                wait(5)
                if not lighting:FindFirstChild("DarkSky") then
                    darkSky:Clone().Parent = lighting
                end
                lighting.Brightness = 0
                lighting.ClockTime = 0
                lighting.OutdoorAmbient = Color3.new(0, 0, 0)
                lighting.Ambient = Color3.new(0, 0, 0)
                lighting.FogColor = Color3.new(0, 0, 0)
                lighting.FogEnd = 100
            end
        end)
    end

    local function removeParticleEffects()
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("ParticleEmitter") then
                obj:Destroy()
            end
        end
    end

    local function removeLightSources()
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("PointLight") or obj:IsA("SpotLight") or obj:IsA("SurfaceLight") then
                obj:Destroy()
            end
        end
    end

    removeParticleEffects()
    removeLightSources()
    darkenSky()
end)

tabFarming:AddLabel("Pets").TextSize = 25

tabFarming:AddButton("Equip Swift Samurai", function()
    local petsFolder = game.Players.LocalPlayer.petsFolder

    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                game:GetService("ReplicatedStorage").rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.2)

    local petsToEquip = {}
    for _, pet in pairs(petsFolder.Unique:GetChildren()) do
        if pet.Name == "Swift Samurai" then
            table.insert(petsToEquip, pet)
        end
    end

    for i = 1, math.min(8, #petsToEquip) do
        game:GetService("ReplicatedStorage").rEvents.equipPetEvent:FireServer("equipPet", petsToEquip[i])
        task.wait(0.1)
    end
end)

tabFarming:AddLabel("Misc").TextSize = 25

local antiAFKEnabled = true
tabFarming:AddSwitch("Anti AFK", function(state)
    local VirtualUser = game:GetService("VirtualUser")
    if state then
        if not antiAFKEnabled then
            antiAFKEnabled = true
            game:GetService("Players").LocalPlayer.Idled:Connect(function()
                VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                task.wait(1)
                VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
            end)
        end
    else
        antiAFKEnabled = false
    end
end)

tabFarming:AddSwitch("Auto Fortune Wheel", function(Value)
    _G.autoFortuneWheelActive = Value
    if Value then
        local function openFortuneWheel()
            while _G.autoFortuneWheelActive do
                local args = {
                    [1] = "openFortuneWheel",
                    [2] = game:GetService("ReplicatedStorage"):WaitForChild("fortuneWheelChances"):WaitForChild("Fortune Wheel")
                }
                game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("openFortuneWheelRemote"):InvokeServer(unpack(args))
                wait(0)
            end
        end
        coroutine.wrap(openFortuneWheel)()
    else
        _G.autoFortuneWheelActive = false
    end
end)

local autoEatBoostsEnabled = false

local boostsList = {
    "ULTRA Shake",
    "TOUGH Bar",
    "Protein Shake",
    "Energy Shake",
    "Protein Bar",
    "Energy Bar",
    "Tropical Shake"
}

local function eatAllBoosts()
    local player = game.Players.LocalPlayer
    local backpack = player:WaitForChild("Backpack")
    local character = player.Character or player.CharacterAdded:Wait()

    for _, boostName in ipairs(boostsList) do
        local boost = backpack:FindFirstChild(boostName)
        while boost do
            boost.Parent = character
            pcall(function()
                boost:Activate()
            end)
            task.wait(0)
            boost = backpack:FindFirstChild(boostName)
        end
    end
end

task.spawn(function()
    while true do
        if autoEatBoostsEnabled then
            eatAllBoosts()
            task.wait(2)
        else
            task.wait(1)
        end
    end
end)

tabFarming:AddSwitch("Eat Items", function(state)
    autoEatBoostsEnabled = state
end)

local statsTab = window:AddTab("Stats")

local player = game.Players.LocalPlayer
local leaderstats = player:WaitForChild("leaderstats")
local strengthStat = leaderstats:WaitForChild("Strength")
local rebirthsStat = leaderstats:WaitForChild("Rebirths")
local durabilityStat = player:WaitForChild("Durability")
local killsStat = leaderstats:WaitForChild("Kills")
local agilityStat = player:WaitForChild("Agility")
local evilKarmaStat = player:WaitForChild("evilKarma")
local goodKarmaStat = player:WaitForChild("goodKarma")
local brawlsStat = leaderstats:WaitForChild("Brawls")

local function formatNumber(number)
    local isNegative = number < 0
    number = math.abs(number)

    if number >= 1e15 then
        return (isNegative and "-" or "") .. string.format("%.2fQa", number / 1e15)
    elseif number >= 1e12 then
        return (isNegative and "-" or "") .. string.format("%.2fT", number / 1e12)
    elseif number >= 1e9 then
        return (isNegative and "-" or "") .. string.format("%.2fB", number / 1e9)
    elseif number >= 1e6 then
        return (isNegative and "-" or "") .. string.format("%.2fM", number / 1e6)
    elseif number >= 1e3 then
        return (isNegative and "-" or "") .. string.format("%.2fK", number / 1e3)
    else
        return (isNegative and "-" or "") .. string.format("%.2f", number)
    end
end

statsTab:AddLabel("⏱️ Session Statistics").TextSize = 30
local stopwatchLabel = statsTab:AddLabel("Session Time: 0d 0h 0m 0s")
stopwatchLabel.TextSize = 20
local customTimerLabel = statsTab:AddLabel("Custom Timer: Not started")
customTimerLabel.TextSize = 20

local isCustomRunning = false
local customStart = 0
local customElapsed = 0

statsTab:AddButton("Start/Stop Custom Timer", function()
    if not isCustomRunning then
        isCustomRunning = true
        customStart = tick() - customElapsed
    else
        isCustomRunning = false
        customElapsed = tick() - customStart
    end
end)

statsTab:AddButton("Reset Custom Timer", function()
    isCustomRunning = false
    customStart = 0
    customElapsed = 0
    customTimerLabel.Text = "Custom Timer: Not started"
end)

local resetSession = false
statsTab:AddButton("Reset Session Stats", function()
    resetSession = true
end)

statsTab:AddLabel("------------------").TextSize = 14

local projectedStrengthLabel = statsTab:AddLabel("Projected Strength: 0 /Hour | 0 /Day")
projectedStrengthLabel.TextSize = 20
local projectedDurabilityLabel = statsTab:AddLabel("Projected Durability: 0 /Hour | 0 /Day")
projectedDurabilityLabel.TextSize = 20
local projectedRebirthsLabel = statsTab:AddLabel("Projected Rebirths: 0 /Hour | 0 /Day")
projectedRebirthsLabel.TextSize = 20

statsTab:AddLabel("------------------").TextSize = 14

local strengthLabel = statsTab:AddLabel("Strength: 0 | Gained: 0")
strengthLabel.TextSize = 20
local durabilityLabel = statsTab:AddLabel("Durability: 0 | Gained: 0")
durabilityLabel.TextSize = 20
local rebirthsLabel = statsTab:AddLabel("Rebirths: 0 | Gained: 0")
rebirthsLabel.TextSize = 20
local killsLabel = statsTab:AddLabel("Kills: 0 | Gained: 0")
killsLabel.TextSize = 20
local agilityLabel = statsTab:AddLabel("Agility: 0 | Gained: 0")
agilityLabel.TextSize = 20
local evilKarmaLabel = statsTab:AddLabel("Evil Karma: 0 | Gained: 0")
evilKarmaLabel.TextSize = 20
local goodKarmaLabel = statsTab:AddLabel("Good Karma: 0 | Gained: 0")
goodKarmaLabel.TextSize = 20
local brawlsLabel = statsTab:AddLabel("Brawls: 0 | Gained: 0")
brawlsLabel.TextSize = 20

local startTime = tick()
local initialStrength = strengthStat.Value
local initialDurability = durabilityStat.Value
local initialRebirths = rebirthsStat.Value
local initialKills = killsStat.Value
local initialAgility = agilityStat.Value
local initialEvilKarma = evilKarmaStat.Value
local initialGoodKarma = goodKarmaStat.Value
local initialBrawls = brawlsStat.Value

task.spawn(function()
    local lastUpdate = 0
    while task.wait(0.2) do
        local elapsedTime = tick() - startTime

        local days = math.floor(elapsedTime / (24 * 3600))
        local hours = math.floor((elapsedTime % (24 * 3600)) / 3600)
        local minutes = math.floor((elapsedTime % 3600) / 60)
        local seconds = math.floor(elapsedTime % 60)
        stopwatchLabel.Text = string.format("Session Time: %dd %dh %dm %ds", days, hours, minutes, seconds)

        if isCustomRunning then
            customElapsed = tick() - customStart
        end
        if customElapsed > 0 then
            local d = math.floor(customElapsed / (24 * 3600))
            local h = math.floor((customElapsed % (24 * 3600)) / 3600)
            local m = math.floor((customElapsed % 3600) / 60)
            local s = math.floor(customElapsed % 60)
            customTimerLabel.Text = string.format("Custom Timer: %dd %dh %dm %ds", d, h, m, s)
        end

        if resetSession then
            startTime = tick()
            initialStrength = strengthStat.Value
            initialDurability = durabilityStat.Value
            initialRebirths = rebirthsStat.Value
            initialKills = killsStat.Value
            initialAgility = agilityStat.Value
            initialEvilKarma = evilKarmaStat.Value
            initialGoodKarma = goodKarmaStat.Value
            initialBrawls = brawlsStat.Value
            resetSession = false
        end

        local currentStrength = strengthStat.Value
        local currentDurability = durabilityStat.Value
        local currentRebirths = rebirthsStat.Value
        local currentKills = killsStat.Value
        local currentAgility = agilityStat.Value
        local currentEvilKarma = evilKarmaStat.Value
        local currentGoodKarma = goodKarmaStat.Value
        local currentBrawls = brawlsStat.Value

        local sessionStrengthDelta = currentStrength - initialStrength
        local sessionDurabilityDelta = currentDurability - initialDurability
        local sessionRebirthsDelta = currentRebirths - initialRebirths
        local sessionKillsDelta = currentKills - initialKills
        local sessionAgilityDelta = currentAgility - initialAgility
        local sessionEvilKarmaDelta = currentEvilKarma - initialEvilKarma
        local sessionGoodKarmaDelta = currentGoodKarma - initialGoodKarma
        local sessionBrawlsDelta = currentBrawls - initialBrawls

        strengthLabel.Text = "Strength: " .. formatNumber(currentStrength) .. " | Gained: " .. formatNumber(sessionStrengthDelta)
        durabilityLabel.Text = "Durability: " .. formatNumber(currentDurability) .. " | Gained: " .. formatNumber(sessionDurabilityDelta)
        rebirthsLabel.Text = "Rebirths: " .. formatNumber(currentRebirths) .. " | Gained: " .. formatNumber(sessionRebirthsDelta)
        agilityLabel.Text = "Agility: " .. formatNumber(currentAgility) .. " | Gained: " .. formatNumber(sessionAgilityDelta)
        killsLabel.Text = "Kills: " .. formatNumber(currentKills) .. " | Gained: " .. formatNumber(sessionKillsDelta)
        evilKarmaLabel.Text = "Evil Karma: " .. formatNumber(currentEvilKarma) .. " | Gained: " .. formatNumber(sessionEvilKarmaDelta)
        goodKarmaLabel.Text = "Good Karma: " .. formatNumber(currentGoodKarma) .. " | Gained: " .. formatNumber(sessionGoodKarmaDelta)
        brawlsLabel.Text = "Brawls: " .. formatNumber(currentBrawls) .. " | Gained: " .. formatNumber(sessionBrawlsDelta)

        if tick() - lastUpdate >= 6 then
            lastUpdate = tick()
            local strengthPerSec = sessionStrengthDelta / elapsedTime
            local durabilityPerSec = sessionDurabilityDelta / elapsedTime
            local rebirthsPerSec = sessionRebirthsDelta / elapsedTime

            local secondsPerHour = 3600
            local secondsPerDay = 86400

            local strengthHour = math.floor(strengthPerSec * secondsPerHour)
            local strengthDay = math.floor(strengthPerSec * secondsPerDay)
            local durabilityHour = math.floor(durabilityPerSec * secondsPerHour)
            local durabilityDay = math.floor(durabilityPerSec * secondsPerDay)
            local rebirthsHour = math.floor(rebirthsPerSec * secondsPerHour)
            local rebirthsDay = math.floor(rebirthsPerSec * secondsPerDay)

            projectedStrengthLabel.Text = "Strength Pace: " .. formatNumber(strengthHour) .. "/Hour | " .. formatNumber(strengthDay) .. "/Day"
            projectedDurabilityLabel.Text = "Durability Pace: " .. formatNumber(durabilityHour) .. "/Hour | " .. formatNumber(durabilityDay) .. "/Day"
            projectedRebirthsLabel.Text = "Rebirth Pace: " .. formatNumber(rebirthsHour) .. "/Hour | " .. formatNumber(rebirthsDay) .. "/Day"
        end
    end
end)
